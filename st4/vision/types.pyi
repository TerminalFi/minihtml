from typing import Optional

from .renderable import BaseTag

class ContextBase:
    def __init__(self): ...
    def a(self, href: Optional[str], content: Optional[str], *args, **kwargs) -> BaseTag: ...
    def b(self, content: Optional[str], *args, **kwargs) -> BaseTag: ...
    def big(self, content: Optional[str], *args, **kwargs) -> BaseTag: ...
    def body(self, content: Optional[str], *args, **kwargs) -> BaseTag: ...
    def br(self, *args, **kwargs) -> BaseTag: ...
    def code(self, content: Optional[str], *args, **kwargs) -> BaseTag: ...
    def div(self, content: Optional[str], *args, **kwargs) -> BaseTag: ...
    def em(self, content: Optional[str], *args, **kwargs) -> BaseTag: ...
    def h1(self, content: Optional[str], *args, **kwargs) -> BaseTag: ...
    def h2(self, content: Optional[str], *args, **kwargs) -> BaseTag: ...
    def h3(self, content: Optional[str], *args, **kwargs) -> BaseTag: ...
    def h4(self, content: Optional[str], *args, **kwargs) -> BaseTag: ...
    def h5(self, content: Optional[str], *args, **kwargs) -> BaseTag: ...
    def h6(self, content: Optional[str], *args, **kwargs) -> BaseTag: ...
    def head(self, content: Optional[str], *args, **kwargs) -> BaseTag: ...
    def hr(self, *args, **kwargs) -> BaseTag: ...
    def html(self, content: Optional[str], *args, **kwargs) -> BaseTag: ...
    def i(self, content: Optional[str], *args, **kwargs) -> BaseTag: ...
    def img(self, src: Optional[str], *args, **kwargs) -> BaseTag: ...
    def li(self, content: Optional[str], *args, **kwargs) -> BaseTag: ...
    def ol(self, *args, **kwargs) -> BaseTag: ...
    def p(self, content: Optional[str], *args, **kwargs) -> BaseTag: ...
    def small(self, content: Optional[str], *args, **kwargs) -> BaseTag: ...
    def span(self, content: Optional[str], *args, **kwargs) -> BaseTag: ...
    def strong(self, content: Optional[str], *args, **kwargs) -> BaseTag: ...
    def style(self, default_css: dict, *args, **kwargs) -> BaseTag: ...
    def tag(self, content: Optional[str], *args, **kwargs) -> BaseTag: ...
    def tt(self, content: Optional[str], *args, **kwargs) -> BaseTag: ...
    def u(self, content: Optional[str], *args, **kwargs) -> BaseTag: ...
    def ul(self, *args, **kwargs) -> BaseTag: ...
    def var(self, content: Optional[str], *args, **kwargs) -> BaseTag: ...
    def render(self) -> str: ...

# type: ignore
